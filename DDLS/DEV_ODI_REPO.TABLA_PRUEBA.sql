ALTER TABLE DEV_ODI_REPO.TABLA_PRUEBA
 DROP PRIMARY KEY CASCADE;

DROP TABLE DEV_ODI_REPO.TABLA_PRUEBA CASCADE CONSTRAINTS PURGE;

CREATE TABLE DEV_ODI_REPO.TABLA_PRUEBA
(
  I_LSCHEMA     NUMBER(19)                      NOT NULL,
  I_TECHNO      NUMBER(19)                      NOT NULL,
  LSCHEMA_NAME  VARCHAR2(35 CHAR)               NOT NULL,
  IND_CHANGE    VARCHAR2(1 CHAR)                    NULL,
  EXT_VERSION   VARCHAR2(35 CHAR)                   NULL,
  LAST_USER     VARCHAR2(400 CHAR)                  NULL,
  FIRST_DATE    DATE                                NULL,
  FIRST_USER    VARCHAR2(400 CHAR)                  NULL,
  LAST_DATE     DATE                                NULL,
  INT_VERSION   NUMBER(19)                          NULL,
  GLOBAL_ID     VARCHAR2(36 CHAR)               NOT NULL,
  PROCESS_TYPE  VARCHAR2(1 CHAR)                    NULL,
  I_TGT_DB_LS   NUMBER(19)                          NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON COLUMN DEV_ODI_REPO.TABLA_PRUEBA.I_LSCHEMA IS 'Este campo es un identificador del esquema';

COMMENT ON COLUMN DEV_ODI_REPO.TABLA_PRUEBA.I_TECHNO IS 'Este campo es un identificador de la Tecnolog�a';

COMMENT ON COLUMN DEV_ODI_REPO.TABLA_PRUEBA.LSCHEMA_NAME IS 'Nombre del esquema logico';

COMMENT ON COLUMN DEV_ODI_REPO.TABLA_PRUEBA.IND_CHANGE IS 'Flag que indica el cambio';

COMMENT ON COLUMN DEV_ODI_REPO.TABLA_PRUEBA.EXT_VERSION IS 'Version Externa';

COMMENT ON COLUMN DEV_ODI_REPO.TABLA_PRUEBA.LAST_USER IS 'El �ltimo usuario que ejecuto';

COMMENT ON COLUMN DEV_ODI_REPO.TABLA_PRUEBA.FIRST_DATE IS 'La primera vez que se ejecuto';

COMMENT ON COLUMN DEV_ODI_REPO.TABLA_PRUEBA.FIRST_USER IS 'El primer usuario en ejecutar';

COMMENT ON COLUMN DEV_ODI_REPO.TABLA_PRUEBA.LAST_DATE IS 'Ultima fecha de ejecuci�n';

COMMENT ON COLUMN DEV_ODI_REPO.TABLA_PRUEBA.INT_VERSION IS 'Version Interna';

COMMENT ON COLUMN DEV_ODI_REPO.TABLA_PRUEBA.GLOBAL_ID IS 'Identificador Global';

COMMENT ON COLUMN DEV_ODI_REPO.TABLA_PRUEBA.PROCESS_TYPE IS 'Flag del tipo de proceso';

COMMENT ON COLUMN DEV_ODI_REPO.TABLA_PRUEBA.I_TGT_DB_LS IS 'Identifiacdor del Esquema Logico en la base Target';



CREATE UNIQUE INDEX DEV_ODI_REPO.TP_AK_LSCHEMA ON DEV_ODI_REPO.TABLA_PRUEBA
(LSCHEMA_NAME)
LOGGING
TABLESPACE DEV_ODI_USER
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX DEV_ODI_REPO.TP_AK_LSCHEMA_GUID ON DEV_ODI_REPO.TABLA_PRUEBA
(GLOBAL_ID)
LOGGING
TABLESPACE DEV_ODI_USER
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX DEV_ODI_REPO.TP_IDX_LSCHEMA_LD ON DEV_ODI_REPO.TABLA_PRUEBA
(LAST_DATE)
LOGGING
TABLESPACE DEV_ODI_USER
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX DEV_ODI_REPO.TP_LSCHEMA_FK1 ON DEV_ODI_REPO.TABLA_PRUEBA
(I_TECHNO)
LOGGING
TABLESPACE DEV_ODI_USER
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX DEV_ODI_REPO.TP_LSCHEMA_FK2 ON DEV_ODI_REPO.TABLA_PRUEBA
(I_TGT_DB_LS)
LOGGING
TABLESPACE DEV_ODI_USER
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX DEV_ODI_REPO.TP_PK_LSCHEMA ON DEV_ODI_REPO.TABLA_PRUEBA
(I_LSCHEMA)
LOGGING
TABLESPACE DEV_ODI_USER
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


ALTER TABLE DEV_ODI_REPO.TABLA_PRUEBA ADD (
  CONSTRAINT CHEQUEA_PROCESS_TYPE
  CHECK (process_type >= 0),
  CONSTRAINT TP_PK_LSCHEMA
  PRIMARY KEY
  (I_LSCHEMA)
  USING INDEX DEV_ODI_REPO.TP_PK_LSCHEMA,
  CONSTRAINT TP_AK_LSCHEMA
  UNIQUE (LSCHEMA_NAME)
  USING INDEX DEV_ODI_REPO.TP_AK_LSCHEMA,
  CONSTRAINT TP_AK_LSCHEMA_GUID
  UNIQUE (GLOBAL_ID)
  USING INDEX DEV_ODI_REPO.TP_AK_LSCHEMA_GUID);

ALTER TABLE DEV_ODI_REPO.TABLA_PRUEBA ADD (
  CONSTRAINT TP_FK_LSCHEMA 
  FOREIGN KEY (I_TECHNO) 
  REFERENCES DEV_ODI_REPO.SNP_TECHNO (I_TECHNO),
  CONSTRAINT TP_FK_TGT_DB_LS 
  FOREIGN KEY (I_TGT_DB_LS) 
  REFERENCES DEV_ODI_REPO.TABLA_PRUEBA (I_LSCHEMA));

GRANT SELECT ON DEV_ODI_REPO.TABLA_PRUEBA TO DEV_WLS;

GRANT ALTER, DELETE, SELECT ON DEV_ODI_REPO.TABLA_PRUEBA TO DIP;
